#!/bin/sh
# Copyright 2016 W. Trevor King <wking@tremily.us>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# usage: inotify-sub [DIRECTORY [EVENT]]
#
# Subscribe to messages being published under DIRECTORY, printing
# events to stdout as they are published.  If EVENT is set, only print
# events matching that label.  If it is not set, print all events.

DIRECTORY="${1:-.}"
EVENT="${2}"
FIFO_DIR="${DIRECTORY}/fifo"
EVENT_DIR="${DIRECTORY}/events"
WATCHING=0
LAST_OLD_EVENT=

show_matching_event() {
	FILENAME="${1}"
	FILE_EVENT="${FILENAME#[^_]*_}"
	if test -z "${EVENT}" -o "_${EVENT}" = "_${FILE_EVENT}"
	then
		cat "${EVENT_DIR}/${FILENAME}"
	fi
}

less_than() {
	if test "_${1}" = "_${2}"
	then
		return 1
	fi
	A=$(printf '%s\n%s\n' "${1}" "${2}")
	B=$(echo "${A}" | sort)
	test "${A}" = "${B}"
	return "${?}"
}

mkdir -p "${EVENT_DIR}" &&
mkdir -p "${FIFO_DIR}" &&
inotifywait -m -e moved_to --format '%f' "${EVENT_DIR}" 2>&1 |
while read -r FILENAME
do
	if test "${WATCHING}" -eq 0
	then
		if test 'Watches established.' = "${FILENAME}"
		then
			WATCHING=1
			DATE=$(TZ=UTC date --iso-8601=ns) &&
			mkfifo -m 0600 "${FIFO_DIR}/${DATE}"
			ls "${EVENT_DIR}" | (
				LAST_OLD_EVENT=
				while read -r FNAME
				do
					show_matching_event "${FNAME}"
					LAST_OLD_EVENT="${FNAME}"
				done &&
				echo "${LAST_OLD_EVENT}" >> "${FIFO_DIR}/${DATE}"
			) &
			LAST_OLD_EVENT=$(cat "${FIFO_DIR}/${DATE}") &&
			wait &&
			rm "${FIFO_DIR}/${DATE}"
		fi
	elif less_than "${LAST_OLD_EVENT}" "${FILENAME}"
	then
		show_matching_event "${FILENAME}"
	fi
done
